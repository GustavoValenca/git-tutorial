// Inicializa o projeto: cria uma pasta .git/
git init

git status

/*
    pasta         stage           .git
        git add =>    git commit =>
*/

// Adiciona o file para o stage
git add <file>

// Adiciona todos os files untracked ao stage
git add .

git config --global user.name <name>
git config --global user.email <email>

git config --list

git commit -m "<mensagem>"

git log

// "Voltar no tempo" para um commit específico
git checkout <6 primeiros digitos do commit>

/*
    Obs: 
    - Sempre dê commit antes de checkout
    - Não tente fazer commits em branches do passado
*/

// "Voltar para o futuro" 
git checkout master

// Mudar branch
git checkout <branch>

// Mudar o nome da branch
git branch -m <branch_name>

// Dá merge entre a branch atual e a branch_name colocando o que tá em branch_name na branch atual
git merge <branch_name>

/*
    git clone vs git remote add:
    https://cursos.alura.com.br/forum/topico-diferenca-entre-clone-e-remote-add-115571
*/

git push origin <branch_name>

git pull origin

git ignore:
    - Adiciono o arquivo ou a pasta no gitignore
    - Ignore committed:
        - git rm -r --cached foldername  // Ignore a Previously Committed Folder 
        - git rm --cached filename // Ignore a Previously Committed File
    - git add .gitignore
    - git commit -m "update ignored files"

    Links:
        - https://www.freecodecamp.org/news/gitignore-file-how-to-ignore-files-and-folders-in-git/
        - https://stackoverflow.com/questions/7527982/applying-gitignore-to-committed-files

